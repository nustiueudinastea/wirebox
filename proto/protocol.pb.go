// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: protocol.proto

package wboxproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IPv6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"fixed64,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *IPv6) Reset() {
	*x = IPv6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPv6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPv6) ProtoMessage() {}

func (x *IPv6) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPv6.ProtoReflect.Descriptor instead.
func (*IPv6) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *IPv6) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *IPv6) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

type Net4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      uint32 `protobuf:"fixed32,1,opt,name=addr,proto3" json:"addr,omitempty"`
	PrefixLen int32  `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
}

func (x *Net4) Reset() {
	*x = Net4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net4) ProtoMessage() {}

func (x *Net4) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net4.ProtoReflect.Descriptor instead.
func (*Net4) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Net4) GetAddr() uint32 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *Net4) GetPrefixLen() int32 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

type Net6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      *IPv6 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	PrefixLen int32 `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
}

func (x *Net6) Reset() {
	*x = Net6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net6) ProtoMessage() {}

func (x *Net6) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net6.ProtoReflect.Descriptor instead.
func (*Net6) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *Net6) GetAddr() *IPv6 {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *Net6) GetPrefixLen() int32 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

type Route4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dest    *Net4  `protobuf:"bytes,1,opt,name=dest,proto3" json:"dest,omitempty"`
	Src     uint32 `protobuf:"fixed32,2,opt,name=src,proto3" json:"src,omitempty"`
	Gateway uint32 `protobuf:"fixed32,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
}

func (x *Route4) Reset() {
	*x = Route4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route4) ProtoMessage() {}

func (x *Route4) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route4.ProtoReflect.Descriptor instead.
func (*Route4) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *Route4) GetDest() *Net4 {
	if x != nil {
		return x.Dest
	}
	return nil
}

func (x *Route4) GetSrc() uint32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *Route4) GetGateway() uint32 {
	if x != nil {
		return x.Gateway
	}
	return 0
}

type Route6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dest *Net6 `protobuf:"bytes,1,opt,name=dest,proto3" json:"dest,omitempty"`
	Src  *IPv6 `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
}

func (x *Route6) Reset() {
	*x = Route6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route6) ProtoMessage() {}

func (x *Route6) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route6.ProtoReflect.Descriptor instead.
func (*Route6) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *Route6) GetDest() *Net6 {
	if x != nil {
		return x.Dest
	}
	return nil
}

func (x *Route6) GetSrc() *IPv6 {
	if x != nil {
		return x.Src
	}
	return nil
}

// Message type byte: 1
type CfgSolict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ed25519 public key of the client. MUST be 32 bytes.
	PeerPubkey []byte `protobuf:"bytes,1,opt,name=peer_pubkey,json=peerPubkey,proto3" json:"peer_pubkey,omitempty"`
}

func (x *CfgSolict) Reset() {
	*x = CfgSolict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSolict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSolict) ProtoMessage() {}

func (x *CfgSolict) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSolict.ProtoReflect.Descriptor instead.
func (*CfgSolict) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *CfgSolict) GetPeerPubkey() []byte {
	if x != nil {
		return x.PeerPubkey
	}
	return nil
}

// Message type byte: 2
type Cfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UNIX timestamp the configuration is valid until.
	ValidUntil uint64 `protobuf:"varint,2,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	// IPv6 network configuration.
	Server6 *IPv6     `protobuf:"bytes,7,opt,name=server6,proto3" json:"server6,omitempty"`
	Net6    []*Net6   `protobuf:"bytes,3,rep,name=net6,proto3" json:"net6,omitempty"`
	Routes6 []*Route6 `protobuf:"bytes,4,rep,name=routes6,proto3" json:"routes6,omitempty"`
	// IPv4 network configuration.
	Server4 uint32    `protobuf:"fixed32,8,opt,name=server4,proto3" json:"server4,omitempty"`
	Net4    []*Net4   `protobuf:"bytes,16,rep,name=net4,proto3" json:"net4,omitempty"`
	Routes4 []*Route4 `protobuf:"bytes,17,rep,name=routes4,proto3" json:"routes4,omitempty"`
	// The WireGuard tunnel endpoint client should switch to.
	// Can be empty if the client should reuse the configuration tunnel.
	// tun6_endpoint - Publicly routable IPv6 address of server.
	// tun_endpoint  - Publicly routable IPv4 address of server.
	// (at least one should be non-empty)
	//
	// tun_port      - UDP port to use.
	Tun6Endpoint *IPv6  `protobuf:"bytes,5,opt,name=tun6_endpoint,json=tun6Endpoint,proto3" json:"tun6_endpoint,omitempty"`
	Tun4Endpoint uint32 `protobuf:"fixed32,18,opt,name=tun4_endpoint,json=tun4Endpoint,proto3" json:"tun4_endpoint,omitempty"`
	TunPort      uint32 `protobuf:"varint,6,opt,name=tun_port,json=tunPort,proto3" json:"tun_port,omitempty"`
}

func (x *Cfg) Reset() {
	*x = Cfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cfg) ProtoMessage() {}

func (x *Cfg) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cfg.ProtoReflect.Descriptor instead.
func (*Cfg) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *Cfg) GetValidUntil() uint64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *Cfg) GetServer6() *IPv6 {
	if x != nil {
		return x.Server6
	}
	return nil
}

func (x *Cfg) GetNet6() []*Net6 {
	if x != nil {
		return x.Net6
	}
	return nil
}

func (x *Cfg) GetRoutes6() []*Route6 {
	if x != nil {
		return x.Routes6
	}
	return nil
}

func (x *Cfg) GetServer4() uint32 {
	if x != nil {
		return x.Server4
	}
	return 0
}

func (x *Cfg) GetNet4() []*Net4 {
	if x != nil {
		return x.Net4
	}
	return nil
}

func (x *Cfg) GetRoutes4() []*Route4 {
	if x != nil {
		return x.Routes4
	}
	return nil
}

func (x *Cfg) GetTun6Endpoint() *IPv6 {
	if x != nil {
		return x.Tun6Endpoint
	}
	return nil
}

func (x *Cfg) GetTun4Endpoint() uint32 {
	if x != nil {
		return x.Tun4Endpoint
	}
	return 0
}

func (x *Cfg) GetTunPort() uint32 {
	if x != nil {
		return x.TunPort
	}
	return 0
}

// Message type byte: 3
type Nack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Human-readable error description.
	Description []byte `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Nack) Reset() {
	*x = Nack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nack) ProtoMessage() {}

func (x *Nack) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nack.ProtoReflect.Descriptor instead.
func (*Nack) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *Nack) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

var File_protocol_proto protoreflect.FileDescriptor

var file_protocol_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2c, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0x39,
	0x0a, 0x04, 0x4e, 0x65, 0x74, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x22, 0x40, 0x0a, 0x04, 0x4e, 0x65, 0x74,
	0x36, 0x12, 0x19, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x22, 0x4f, 0x0a, 0x06, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x34, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x65, 0x74, 0x34, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x73,
	0x72, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x3c, 0x0a, 0x06,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x36, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x65, 0x74, 0x36, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x49, 0x50, 0x76, 0x36, 0x52, 0x03, 0x73, 0x72, 0x63, 0x22, 0x2c, 0x0a, 0x09, 0x43, 0x66,
	0x67, 0x53, 0x6f, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x65,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0xc9, 0x02, 0x0a, 0x03, 0x43, 0x66, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x12, 0x1f, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x36, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x36, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x65, 0x74, 0x36, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x4e, 0x65, 0x74, 0x36, 0x52, 0x04, 0x6e, 0x65, 0x74, 0x36, 0x12, 0x21, 0x0a,
	0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x36, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x36, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x36,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x34, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x65,
	0x74, 0x34, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x65, 0x74, 0x34, 0x52,
	0x04, 0x6e, 0x65, 0x74, 0x34, 0x12, 0x21, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x34,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x34, 0x52,
	0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x34, 0x12, 0x2a, 0x0a, 0x0d, 0x74, 0x75, 0x6e, 0x36,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x52, 0x0c, 0x74, 0x75, 0x6e, 0x36, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x75, 0x6e, 0x34, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0c, 0x74, 0x75, 0x6e,
	0x34, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x75, 0x6e,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x75, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x22, 0x28, 0x0a, 0x04, 0x4e, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x5a, 0x0b, 0x2e, 0x2f, 0x77, 0x62, 0x6f, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData = file_protocol_proto_rawDesc
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_rawDescData)
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protocol_proto_goTypes = []interface{}{
	(*IPv6)(nil),      // 0: IPv6
	(*Net4)(nil),      // 1: Net4
	(*Net6)(nil),      // 2: Net6
	(*Route4)(nil),    // 3: Route4
	(*Route6)(nil),    // 4: Route6
	(*CfgSolict)(nil), // 5: CfgSolict
	(*Cfg)(nil),       // 6: Cfg
	(*Nack)(nil),      // 7: Nack
}
var file_protocol_proto_depIdxs = []int32{
	0,  // 0: Net6.addr:type_name -> IPv6
	1,  // 1: Route4.dest:type_name -> Net4
	2,  // 2: Route6.dest:type_name -> Net6
	0,  // 3: Route6.src:type_name -> IPv6
	0,  // 4: Cfg.server6:type_name -> IPv6
	2,  // 5: Cfg.net6:type_name -> Net6
	4,  // 6: Cfg.routes6:type_name -> Route6
	1,  // 7: Cfg.net4:type_name -> Net4
	3,  // 8: Cfg.routes4:type_name -> Route4
	0,  // 9: Cfg.tun6_endpoint:type_name -> IPv6
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPv6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSolict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_rawDesc = nil
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
